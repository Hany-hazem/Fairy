version: "3.9"

services:
  # Redis service with enhanced configuration for MCP
  redis-mcp:
    image: redis:7-alpine
    container_name: redis-mcp
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./config/redis:/usr/local/etc/redis
    command: >
      redis-server 
      --appendonly yes 
      --appendfsync everysec
      --maxmemory ${REDIS_MAX_MEMORY:-512mb}
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - mcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Sentinel for high availability (optional)
  redis-sentinel:
    image: redis:7-alpine
    container_name: redis-sentinel
    restart: unless-stopped
    depends_on:
      - redis-mcp
    volumes:
      - ./config/sentinel:/usr/local/etc/redis
    command: >
      redis-sentinel /usr/local/etc/redis/sentinel.conf
    ports:
      - "${REDIS_SENTINEL_PORT:-26379}:26379"
    networks:
      - mcp-network
    profiles:
      - ha
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MCP Server service
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-server
    restart: unless-stopped
    depends_on:
      redis-mcp:
        condition: service_healthy
    ports:
      - "${MCP_SERVER_PORT:-8765}:8765"
    environment:
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8765
      - MCP_SERVER_MODE=${MCP_SERVER_MODE:-standalone}
      - MCP_SERVER_MAX_CONNECTIONS=${MCP_SERVER_MAX_CONNECTIONS:-100}
      - REDIS_URL=redis://redis-mcp:6379
      - REDIS_MAX_CONNECTIONS=${REDIS_MAX_CONNECTIONS:-20}
      - REDIS_CONNECTION_TIMEOUT=${REDIS_CONNECTION_TIMEOUT:-10}
      - GIT_REPO_PATH=/workspace
      - GIT_DEFAULT_BRANCH=${GIT_DEFAULT_BRANCH:-main}
      - GIT_WORKFLOW_MODE=${GIT_WORKFLOW_MODE:-automatic}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./:/workspace
      - git_data:/workspace/.git
      - mcp_logs:/app/logs
      - ./config:/app/config
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.create_connection(('localhost', 8765), timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Git workflow service
  git-workflow:
    build:
      context: .
      dockerfile: Dockerfile.git
    container_name: git-workflow
    restart: unless-stopped
    depends_on:
      mcp-server:
        condition: service_healthy
    environment:
      - GIT_REPO_PATH=/workspace
      - GIT_USER_NAME=${GIT_USER_NAME:-MCP Bot}
      - GIT_USER_EMAIL=${GIT_USER_EMAIL:-mcp-bot@example.com}
      - GIT_DEFAULT_BRANCH=${GIT_DEFAULT_BRANCH:-main}
      - GIT_WORKFLOW_MODE=${GIT_WORKFLOW_MODE:-automatic}
      - GIT_AUTO_COMMIT=${GIT_AUTO_COMMIT:-true}
      - MCP_SERVER_HOST=mcp-server
      - MCP_SERVER_PORT=8765
      - REDIS_URL=redis://redis-mcp:6379
    volumes:
      - ./:/workspace
      - git_data:/workspace/.git
      - git_logs:/app/logs
      - ./config:/app/config
    networks:
      - mcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Monitoring and health check service
  monitoring:
    image: prom/prometheus:latest
    container_name: mcp-monitoring
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mcp-network
    profiles:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    networks:
      - mcp-network
    profiles:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backup service
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: mcp-backup
    restart: "no"
    depends_on:
      - redis-mcp
    environment:
      - REDIS_URL=redis://redis-mcp:6379
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}  # Daily at 2 AM
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7}
      - GIT_REPO_PATH=/workspace
    volumes:
      - ./:/workspace
      - backup_data:/backups
      - ./config:/app/config
    networks:
      - mcp-network
    profiles:
      - backup
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
    driver: local
  git_data:
    driver: local
  mcp_logs:
    driver: local
  git_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  backup_data:
    driver: local

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16